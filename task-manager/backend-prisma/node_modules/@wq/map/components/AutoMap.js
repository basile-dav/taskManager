import React from 'react';
import { useComponents } from '@wq/react';
import { useMapState, useOverlayComponents } from '../hooks';
import PropTypes from 'prop-types';
export default function AutoMap({
    name,
    containerStyle,
    context,
    state,
    children
}) {
    const mapState = useMapState(),
        {
            Map,
            MapInteraction,
            MapAutoZoom,
            MapIdentify,
            AutoBasemap,
            AutoOverlay,
            Legend,
            BasemapToggle,
            OverlayToggle
        } = useComponents(),
        { Highlight } = useOverlayComponents();

    if (!state) {
        state = mapState;
    }

    if (!state) {
        return null;
    }

    const {
        basemaps,
        overlays,
        initBounds,
        mapProps,
        autoZoom,
        highlight
    } = state;
    const identify = overlays.some(overlay => !!overlay.popup);
    return /*#__PURE__*/ React.createElement(
        Map,
        {
            name: name,
            initBounds: initBounds,
            mapProps: mapProps,
            containerStyle: containerStyle
        },
        /*#__PURE__*/ React.createElement(MapInteraction, {
            name: name
        }),
        !!autoZoom &&
            /*#__PURE__*/ React.createElement(MapAutoZoom, {
                name: name,
                context: context,
                ...autoZoom
            }),
        identify &&
            /*#__PURE__*/ React.createElement(MapIdentify, {
                name: name,
                context: context
            }),
        /*#__PURE__*/ React.createElement(
            Legend,
            null,
            basemaps.map((conf, i) =>
                /*#__PURE__*/ React.createElement(
                    BasemapToggle,
                    {
                        key: i,
                        name: conf.name,
                        active: conf.active
                    },
                    /*#__PURE__*/ React.createElement(AutoBasemap, { ...conf })
                )
            ),
            overlays.map((conf, i) =>
                /*#__PURE__*/ React.createElement(
                    OverlayToggle,
                    {
                        key: i,
                        name: conf.name,
                        active: conf.active
                    },
                    /*#__PURE__*/ React.createElement(AutoOverlay, {
                        ...conf,
                        context: context
                    })
                )
            )
        ),
        highlight &&
            /*#__PURE__*/ React.createElement(Highlight, {
                data: highlight
            }),
        children
    );
}

AutoMap.makeComponent = props => {
    function Component() {
        return /*#__PURE__*/ React.createElement(AutoMap, { ...props });
    }

    return Component;
};

AutoMap.propTypes = {
    name: PropTypes.string,
    containerStyle: PropTypes.object,
    context: PropTypes.object,
    state: PropTypes.object,
    children: PropTypes.node
};
