import React from 'react';
import {
    useComponents,
    useViewComponents,
    useReverse,
    useList
} from '../hooks';
export default function DefaultList() {
    const reverse = useReverse(),
        { list, unsynced, empty, page_config } = useList(),
        {
            Message,
            ScrollView,
            List,
            ListSubheader,
            ListItem,
            ListItemLink,
            Pagination,
            Fab
        } = useComponents(),
        { OutboxList } = useViewComponents(),
        { page, can_add, can_view } = page_config,
        hasUnsynced = unsynced.length > 0;

    function Row({ id, label }) {
        if (can_view === false) {
            return /*#__PURE__*/ React.createElement(ListItem, null, label);
        } else {
            return /*#__PURE__*/ React.createElement(
                ListItemLink,
                {
                    to: reverse(`${page}_detail`, id)
                },
                label
            );
        }
    }

    return /*#__PURE__*/ React.createElement(
        React.Fragment,
        null,
        /*#__PURE__*/ React.createElement(
            ScrollView,
            null,
            hasUnsynced
                ? /*#__PURE__*/ React.createElement(
                      React.Fragment,
                      null,
                      /*#__PURE__*/ React.createElement(OutboxList, {
                          modelConf: page_config
                      }),
                      !empty &&
                          /*#__PURE__*/ React.createElement(
                              List,
                              null,
                              /*#__PURE__*/ React.createElement(
                                  ListSubheader,
                                  null,
                                  /*#__PURE__*/ React.createElement(Message, {
                                      id: 'SYNCED_ITEMS'
                                  })
                              ),
                              list.map(row =>
                                  /*#__PURE__*/ React.createElement(Row, {
                                      key: row.id,
                                      ...row
                                  })
                              )
                          )
                  )
                : /*#__PURE__*/ React.createElement(
                      List,
                      null,
                      empty
                          ? /*#__PURE__*/ React.createElement(
                                ListItem,
                                null,
                                /*#__PURE__*/ React.createElement(Message, {
                                    id: 'LIST_IS_EMPTY'
                                })
                            )
                          : list.map(row =>
                                /*#__PURE__*/ React.createElement(Row, {
                                    key: row.id,
                                    ...row
                                })
                            )
                  ),
            /*#__PURE__*/ React.createElement(Pagination, null)
        ),
        can_add !== false &&
            /*#__PURE__*/ React.createElement(Fab, {
                icon: 'add',
                to: reverse(`${page}_edit:new`)
            })
    );
}
